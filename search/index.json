[{"content":"以下是本人创作并原创发布的哪吒美化代码：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 \u0026lt;script\u0026gt; window.CustomBackgroundImage = \u0026#39;https://t.alcy.cc/ycy\u0026#39;; window.CustomMobileBackgroundImage = \u0026#39;https://t.alcy.cc/ycy\u0026#39;; window.CustomLogo = \u0026#39;https://www.ainibabi.buzz/upload/icon.png\u0026#39;; window.CustomDesc = \u0026#39;Forme\u0026#39;; window.ShowNetTransfer = true; window.DisableAnimatedMan = false; window.FixedTopServerName = true; window.ForceUseSvgFlag = true; window.CustomLinks = \u0026#39;[{\u0026#34;link\u0026#34;:\u0026#34;https://jk.ainibabi.buzz/\u0026#34;,\u0026#34;name\u0026#34;:\u0026#34;Home\u0026#34;},{\u0026#34;link\u0026#34;:\u0026#34;https://www.ainibabi.buzz/\u0026#34;,\u0026#34;name\u0026#34;:\u0026#34;Blog\u0026#34;}]\u0026#39;; var link = document.createElement(\u0026#39;link\u0026#39;); link.rel = \u0026#39;stylesheet\u0026#39;; link.href = \u0026#39;https://font.sec.miui.com/font/css?family=MiSans:400,700:MiSans\u0026#39;; document.head.appendChild(link); \u0026lt;/script\u0026gt; \u0026lt;!-- 特效：爱心、樱花、星星 --\u0026gt; \u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/gh/mocchen/cssmeihua/js/aixin.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/gh/mocchen/cssmeihua/js/yinghua.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/gh/mocchen/cssmeihua/js/xiaoxingxing.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;style\u0026gt; * { font-family: \u0026#39;MiSans\u0026#39;; } h1, h2, h3, h4, h5 { font-family: \u0026#39;MiSans\u0026#39;, sans-serif; } .mobile-iframe { display: none; } @media (max-width: 768px) { .mobile-iframe { display: none; } } .dark .bg-cover::after, .light .bg-cover::after { display: none !important; } footer { display: none; } \u0026lt;/style\u0026gt; ","date":"2025-08-15T00:00:00Z","image":"http://localhost:1313/p/na-zha-mei-hua-dai-ma/1_hu_2958b0f98c3d9238.png","permalink":"http://localhost:1313/p/na-zha-mei-hua-dai-ma/","title":"哪吒美化代码"},{"content":"笔者在陕西移动办理宽带时，移动公司赠送了一个魔百盒 OTT 盒子。移动魔百盒可以通过 GITV（银河互联网电视）观看电视直播，虽比起 IPTV 延迟较高，但也有一定价值。最近在折腾 Kodi，于是想通过抓包的方式得到 GITV 的 M3U 源，以便在 Kodi 和其他设备上观看。\n抓包 抓包采用 Wireshark 进行。具体方法为：在电脑上开热点，让魔百盒连接热点，再使用 Wireshark 抓包相应的网卡。\n开始抓包后，在魔百盒上打开节目点播，得到节目列表（不需要开始播放）后停止抓包。\n通过分析抓包结果，我们筛选出两个重要的 URL：\nchannel_info_url: http://111.20.43.97:29010/chnInfos/SAXYD_ZX/0.json epg_list_url: http://111.20.43.97:29010/tagNewestEpgList/SAXYD_ZX/1/100/0.json 其中，channel_info_url 的内容如下：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 { \u0026#34;timestamp\u0026#34;: \u0026#34;20230122220712\u0026#34;, \u0026#34;data\u0026#34;: [ { \u0026#34;bigIconWidth\u0026#34;: 220, \u0026#34;width\u0026#34;: 88, \u0026#34;chnDefinition\u0026#34;: \u0026#34;200\u0026#34;, \u0026#34;chnIcon\u0026#34;: \u0026#34;http:\\/\\/live.pic.gitv.tv\\/images\\/sx_icon\\/CCTV-1.png\u0026#34;, \u0026#34;nodeChn_status\u0026#34;: \u0026#34;1\u0026#34;, \u0026#34;playIcon\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;height\u0026#34;: 22, \u0026#34;bigIconHeight\u0026#34;: 90, \u0026#34;forbidReplay\u0026#34;: \u0026#34;1\u0026#34;, \u0026#34;chns\u0026#34;: [ { \u0026#34;codeRate\u0026#34;: \u0026#34;default\u0026#34;, \u0026#34;playUrl\u0026#34;: \u0026#34;http:\\/\\/saxyd-livod.dispatcher.gitv.tv\\/gitv_live\\/CCTV-1-HD\\/CCTV-1-HD.m3u8?p=GITV\u0026amp;area=SAXYD_ZX\u0026#34;, \u0026#34;num\u0026#34;: 3, \u0026#34;definition\u0026#34;: \u0026#34;清晰度自适应\u0026#34; }, { \u0026#34;codeRate\u0026#34;: \u0026#34;3M\u0026#34;, \u0026#34;playUrl\u0026#34;: \u0026#34;http:\\/\\/saxyd-livod.dispatcher.gitv.tv\\/gitv_live\\/CCTV-1-HD\\/CCTV-1-HD.m3u8?p=GITV\u0026amp;area=SAXYD_ZX\u0026#34;, \u0026#34;num\u0026#34;: 3, \u0026#34;definition\u0026#34;: \u0026#34;高清\u0026#34; } ], \u0026#34;newIcon\u0026#34;: \u0026#34;http:\\/\\/live.pic.gitv.tv\\/images\\/sx_icon\\/cctv-1_B.png\u0026#34;, \u0026#34;chnName\u0026#34;: \u0026#34;CCTV-1高清\u0026#34;, \u0026#34;chn_status\u0026#34;: \u0026#34;1\u0026#34;, \u0026#34;bigChnIcon\u0026#34;: \u0026#34;http:\\/\\/live.pic.gitv.tv\\/\\/images\\/livod_icon\\/20191224\\/CCTV-1.png\u0026#34;, \u0026#34;subTags\u0026#34;: [ { \u0026#34;tagId\u0026#34;: 0, \u0026#34;subTagId\u0026#34;: 1, \u0026#34;tagType\u0026#34;: 0 } ], \u0026#34;guidWidth\u0026#34;: null, \u0026#34;playIconWidth\u0026#34;: null, \u0026#34;showLive\u0026#34;: \u0026#34;1\u0026#34;, \u0026#34;chnCode\u0026#34;: \u0026#34;CCTV-1-HD\u0026#34;, \u0026#34;guideHeight\u0026#34;: null, \u0026#34;guideIcon\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;playIconHeight\u0026#34;: null }, ... ] } 从中我们可以获取到：\nbigChnIcon: 高清台标 chnName: 频道名称 chnCode: 频道代码 epg_list_url 的内容如下：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 { \u0026#34;timestamp\u0026#34;: \u0026#34;20230121093506\u0026#34;, \u0026#34;data\u0026#34;: [ { \u0026#34;backgroundImg\u0026#34;: null, \u0026#34;chnunCode\u0026#34;: \u0026#34;cctv1\u0026#34;, \u0026#34;packageCode\u0026#34;: \u0026#34;5889b41f35db5e5d3c8e9a10_CCTV-1-HD\u0026#34;, \u0026#34;chnDefinition\u0026#34;: 200, \u0026#34;isShift\u0026#34;: 1, \u0026#34;isBroadcastChn\u0026#34;: 0, \u0026#34;packageCover\u0026#34;: \u0026#34;http:\\/\\/live.pic.gitv.tv\\/\\/images\\/2023\\/1\\/154\\/5f841190a0294f32b102dfc8c283130c.jpg\u0026#34;, \u0026#34;backPoster\u0026#34;: \u0026#34;http:\\/\\/saxyd-livod.dispatcher.gitv.tv\\/gitv_live\\/CCTV-1-HD\\/images?p=GITV\u0026amp;area=SAXYD_ZX\u0026#34;, \u0026#34;tag\u0026#34;: \u0026#34;综艺\u0026#34;, \u0026#34;purchaseOwn\u0026#34;: 0, \u0026#34;defHis\u0026#34;: 0, \u0026#34;chnNum\u0026#34;: 1, \u0026#34;title\u0026#34;: \u0026#34;喜气洋洋合家欢-2023东西南北贺新春1\u0026#34;, \u0026#34;packageCoverH\u0026#34;: \u0026#34;http:\\/\\/live.pic.gitv.tv\\/\\/images\\/2023\\/1\\/154\\/612692009ef24f108a7dbed55e60c7a8.jpg\u0026#34;, \u0026#34;packageName\u0026#34;: null, \u0026#34;startTime\u0026#34;: 1674261840000, \u0026#34;epgPoster\u0026#34;: \u0026#34;http:\\/\\/saxyd-livod.dispatcher.gitv.tv\\/gitv_live\\/CCTV-1-HD\\/live.jpg?p=GITV\u0026amp;area=SAXYD_ZX\u0026#34;, \u0026#34;createTime\u0026#34;: 1674197129000, \u0026#34;id\u0026#34;: null, \u0026#34;chnOrder\u0026#34;: 5, \u0026#34;restrictLv\u0026#34;: null, \u0026#34;playUrl\u0026#34;: \u0026#34;http:\\/\\/saxyd-livod.dispatcher.gitv.tv\\/gitv_live\\/CCTV-1-HD\\/CCTV-1-HD.m3u8?p=GITV\u0026amp;area=SAXYD_ZX\u0026#34;, \u0026#34;playOrder\u0026#34;: 20230121, \u0026#34;chnName\u0026#34;: \u0026#34;CCTV-1高清\u0026#34;, \u0026#34;fkOrder\u0026#34;: 9999, \u0026#34;endTime\u0026#34;: 1674272280000, \u0026#34;superscriptPic\u0026#34;: \u0026#34;http:\\/\\/live.pic.gitv.tv\\/images\\/livod_icon\\/superscript\\/hd.png\u0026#34;, \u0026#34;chnTypeId\u0026#34;: 1, \u0026#34;epgStatus\u0026#34;: 1, \u0026#34;chnCode\u0026#34;: \u0026#34;CCTV-1-HD\u0026#34;, \u0026#34;showLive\u0026#34;: 1, \u0026#34;onlineCount\u0026#34;: 53046, \u0026#34;backPlayUrl\u0026#34;: \u0026#34;http:\\/\\/saxyd-livod.dispatcher.gitv.tv\\/gitv_live\\/CCTV-1-HD\\/history.m3u8?p=GITV\u0026amp;area=SAXYD_ZX\u0026#34;, \u0026#34;updateTime\u0026#34;: 1674197131000, \u0026#34;superscriptType\u0026#34;: 1 }, ... ] } 从中我们可以获取到：\ntitle: 节目标题 startTime: 节目开始时间 endTime: 节目结束时间 chnName: 频道名称 chnCode: 频道代码 playUrl: 播放地址 需要注意的是，playUrl 并不是直接的播放地址。访问此地址得到：\n1 2 3 4 5 6 7 { \u0026#34;t\u0026#34;: 1674914975, \u0026#34;o\u0026#34;: \u0026#34;live\u0026#34;, \u0026#34;u\u0026#34;: \u0026#34;http:\\/\\/zteres.sn.chinamobile.com:6060\\/yinhe\\/2\\/ch00000090990000001068?virtualDomain=yinhe.live_hls.zte.com\u0026#34;, \u0026#34;c\u0026#34;: \u0026#34;zhongxing\u0026#34;, \u0026#34;isBlackUser\u0026#34;: \u0026#34;false\u0026#34; } 其中 u 才是真正的播放地址。\n生成 M3U 源和 EPG 节目表 根据以上这些信息，我们可以编写一个 Python 脚本来定时生成 M3U 源和 EPG 节目表。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 import sys import json from urllib.request import urlopen from datetime import datetime from threading import Thread import time from http.server import HTTPServer, SimpleHTTPRequestHandler import m3u import xmltv config = json.load(open(\u0026#34;config.json\u0026#34;)) class UpdateFilesThread(Thread): def __init__(self, threadID, name, delay): Thread.__init__(self) self.threadID = threadID self.name = name self.delay = delay def run(self): while True: try: print(\u0026#34;更新频道...\u0026#34;) channel_info_data = json.loads( urlopen(config[\u0026#34;channel_info_url\u0026#34;]).read().decode(\u0026#34;utf-8\u0026#34;) )[\u0026#34;data\u0026#34;] epg_list_data = json.loads( urlopen(config[\u0026#34;epg_list_url\u0026#34;]).read().decode(\u0026#34;utf-8\u0026#34;) )[\u0026#34;data\u0026#34;] try: channel_cache = json.load(open(\u0026#34;cache.json\u0026#34;)) except FileNotFoundError: channel_cache = {} # 获取频道图标 channel_icon = {} for channel in channel_info_data: channel_icon[channel[\u0026#34;chnCode\u0026#34;]] = channel[\u0026#34;bigChnIcon\u0026#34;] # 获取频道信息 m3u_channel_list: list[m3u.Channel] = [] xmltv_channel_list: list[xmltv.Channel] = [] for channel in epg_list_data: tvg_logo = channel_icon[channel[\u0026#34;chnCode\u0026#34;]] if channel[\u0026#34;chnCode\u0026#34;] in channel_cache: m3u8 = channel_cache[channel[\u0026#34;chnCode\u0026#34;]][\u0026#34;m3u8\u0026#34;] else: m3u8 = json.loads( urlopen(channel[\u0026#34;playUrl\u0026#34;]).read().decode(\u0026#34;utf-8\u0026#34;) )[\u0026#34;u\u0026#34;] channel_cache[channel[\u0026#34;chnCode\u0026#34;]] = { \u0026#34;m3u8\u0026#34;: m3u8 } m3u_channel = m3u.Channel( tvg_id=channel[\u0026#34;chnCode\u0026#34;], tvg_name=channel[\u0026#34;chnName\u0026#34;], tvg_logo=tvg_logo, group_title=\u0026#34;GITV\u0026#34;, m3u8=m3u8 ) m3u_channel_list.append(m3u_channel) programme_title = channel[\u0026#34;title\u0026#34;] programme_start = datetime.fromtimestamp( channel[\u0026#34;startTime\u0026#34;] / 1000) programme_stop = datetime.fromtimestamp( channel[\u0026#34;endTime\u0026#34;] / 1000) xmltv_channel = xmltv.Channel( channel_id=channel[\u0026#34;chnCode\u0026#34;], display_name=channel[\u0026#34;chnName\u0026#34;], programme_title=programme_title, programme_start=programme_start, programme_stop=programme_stop ) xmltv_channel_list.append(xmltv_channel) print(f\u0026#34;频道：{channel[\u0026#39;chnName\u0026#39;]}\u0026#34;) # 保存 M3U 文件 with open(\u0026#34;gitv.m3u\u0026#34;, \u0026#34;w\u0026#34;, encoding=\u0026#34;utf-8\u0026#34;) as f: f.write(m3u.M3u(m3u_channel_list).generate_text()) # 保存 XMLTV 文件 with open(\u0026#34;gitv.xml\u0026#34;, \u0026#34;w\u0026#34;, encoding=\u0026#34;utf-8\u0026#34;) as f: f.write(xmltv.Xmltv(xmltv_channel_list).generate_text()) # 保存缓存 json.dump(channel_cache, open(\u0026#34;cache.json\u0026#34;, \u0026#34;w\u0026#34;)) print(\u0026#34;更新完成！\u0026#34;) time.sleep(config[\u0026#34;update_interval\u0026#34;]) except KeyboardInterrupt: sys.exit() except Exception as e: print(e) class HttpServerThread(Thread): def __init__(self, threadID, name, delay): Thread.__init__(self) self.threadID = threadID self.name = name self.delay = delay def run(self): server = HTTPServer( (config[\u0026#34;listen_address\u0026#34;], config[\u0026#34;listen_port\u0026#34;]), SimpleHTTPRequestHandler ) server.serve_forever() def main(): update_files_thread = UpdateFilesThread(1, \u0026#34;UpdateFilesThread\u0026#34;, 1) http_server_thread = HttpServerThread(2, \u0026#34;HttpServerThread\u0026#34;, 2) update_files_thread.start() http_server_thread.start() update_files_thread.join() http_server_thread.join() if __name__ == \u0026#39;__main__\u0026#39;: main() ","date":"2025-08-10T00:00:00Z","image":"http://localhost:1313/p/gitv-ott-m3u-epg/1_hu_cdb5ecd66601ba59.png","permalink":"http://localhost:1313/p/gitv-ott-m3u-epg/","title":"为移动魔百盒 GITV 生成 Kodi 可用的 M3U 源和 EPG 节目表"}]