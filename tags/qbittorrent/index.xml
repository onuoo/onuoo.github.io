<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>QBittorrent on Myth&#39;s Blog | Myth 的小站</title>
        <link>http://localhost:1313/tags/qbittorrent/</link>
        <description>Recent content in QBittorrent on Myth&#39;s Blog | Myth 的小站</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <lastBuildDate>Sun, 15 Jan 2023 00:00:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/tags/qbittorrent/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>通过 NAT TCP 打洞使 qBittorrent 获得公网 IPv4 的连接性体验</title>
        <link>http://localhost:1313/p/qbittorrent-nat-tcp-hole-punching/</link>
        <pubDate>Sun, 15 Jan 2023 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/p/qbittorrent-nat-tcp-hole-punching/</guid>
        <description>&lt;img src="http://localhost:1313/p/qbittorrent-nat-tcp-hole-punching/1.png" alt="Featured image of post 通过 NAT TCP 打洞使 qBittorrent 获得公网 IPv4 的连接性体验" /&gt;&lt;h2 id=&#34;网络环境分析&#34;&gt;网络环境分析
&lt;/h2&gt;&lt;p&gt;目前在国内，许多用户无法从运营商那里获取公网 IPv4 地址（点名中国移动）。对于 PT 玩家而言，这意味着他们在 IPv4 下的可连接性很差，无法获取很多上传量。在这种现状下，TCP 打洞是一种很好的解决方案。&lt;/p&gt;
&lt;p&gt;为了更好地理解 TCP 打洞帮助做种的原理，我们先来看看客户端和 Tracker 通信的过程。简单地讲，qBittorrent 之类的客户端将自己的 IP 地址和监听端口上报给 Tracker，Tracker 再将其发送给其他需要下载的 Peer 客户端。之后，Peer 客户端连接至相应的 IP 地址和端口，开始下载。需要注意的是，&lt;strong&gt;实际上，客户端往往不需要上报自己的 IPv4 地址，因为 Tracker 采用的是从 TCP 报文中获取到的 IPv4 地址&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;这一过程是很清晰的，但实际网络环境不会这么理想。我们考虑国内宽带的常见情况：通过 PPPoE 拨号获得 IP 地址，网络设备有光猫、路由器和一个子网下的做种设备。为了避免光猫拨号造成的麻烦，我们只讨论光猫为桥接模式的情况。&lt;/p&gt;
&lt;h3 id=&#34;能获取到公网-ipv4-地址&#34;&gt;能获取到公网 IPv4 地址
&lt;/h3&gt;&lt;p&gt;首先，考虑路由器 PPPoE 拨号能获取到公网 IPv4 地址的情况。不难发现，如果 BT 客户端运行在路由器上，就可以轻松地被其他客户端连接，因为客户端监听在公网地址和端口上。假设 BT 客户端上报的监听端口为 &lt;code&gt;23456&lt;/code&gt;，Tracker 从 TCP 报文中获得的 IPv4 地址为公网地址 &lt;code&gt;1.1.1.1&lt;/code&gt;。这样，其他客户端连接到 &lt;code&gt;1.1.1.1:23456&lt;/code&gt; 即可进行下载。&lt;/p&gt;
&lt;p&gt;但如果 BT 客户端运行在路由器子网下的设备上，情况则稍稍复杂。我们假设路由器获得的公网地址为 &lt;code&gt;1.1.1.1&lt;/code&gt;，路由器在子网的地址为 &lt;code&gt;192.168.1.1&lt;/code&gt;，客户端设备的地址为 &lt;code&gt;192.168.1.2&lt;/code&gt;。此时，BT 客户端监听在 &lt;code&gt;192.168.1.2&lt;/code&gt; 的 &lt;code&gt;23456&lt;/code&gt; 端口上。BT 客户端上报的端口也为 &lt;code&gt;23456&lt;/code&gt;，而 Tracker 获得的 IPv4 地址则为公网地址 &lt;code&gt;1.1.1.1&lt;/code&gt;。其他客户端会尝试连接 &lt;code&gt;1.1.1.1:23456&lt;/code&gt;，这显然会失败，因为拥有公网地址的路由器并没有在监听此端口，更不会把此端口收到的数据转发到 &lt;code&gt;192.168.1.2:23456&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;这时，有几种常见的解决方案：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在路由器上设置 &lt;code&gt;192.168.1.2&lt;/code&gt; 为 DMZ 主机。此时，发往 &lt;code&gt;1.1.1.1:23456&lt;/code&gt; 的数据会被自动转发到 &lt;code&gt;192.168.1.2:23456&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在路由器上设置端口转发，将 &lt;code&gt;23456&lt;/code&gt; 端口转发到 &lt;code&gt;192.168.1.2:23456&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;打开路由器和 BT 客户端的 UPnP 功能。这实际上可以理解为一个自动的端口转发协议。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;可以看出，路由器上有一层 NAT（网络地址转换），但由于路由器对我们而言是完全可控的设备，我们可以轻松配置转发穿越这一层 NAT，使其他客户端可以连接到我们的 BT 客户端。&lt;/p&gt;
&lt;h3 id=&#34;不能获取到公网-ipv4-地址&#34;&gt;不能获取到公网 IPv4 地址
&lt;/h3&gt;&lt;p&gt;不能获取到公网 IPv4 地址的情况则令人绝望。这意味着只有运营商设备拥有公网地址，路由器获取到的则是一个私有地址，其本身就在通过 NAT 连接互联网。&lt;/p&gt;
&lt;p&gt;我们假设运营商设备的公网地址为 &lt;code&gt;1.1.1.1&lt;/code&gt;，路由器获取到的地址为 &lt;code&gt;10.0.0.2&lt;/code&gt;。我们在路由器上配置好上一节的内容，使得 &lt;code&gt;10.0.0.2:23456&lt;/code&gt; 上存在一个 BT 客户端监听服务。此时，客户端向 Tracker 上报端口 &lt;code&gt;23456&lt;/code&gt;，Tracker 获得的 IPv4 地址为公网地址 &lt;code&gt;1.1.1.1&lt;/code&gt;。其他客户端会尝试连接 &lt;code&gt;1.1.1.1:23456&lt;/code&gt;，这显然会失败。并且，我们无法通过在运营商 NAT 设备上配置 DMZ 主机或端口转发来解决，因为运营商设备对我们来说不可控。&lt;/p&gt;
&lt;h2 id=&#34;nat-类型分析&#34;&gt;NAT 类型分析
&lt;/h2&gt;&lt;p&gt;为了设法穿越运营商 NAT，我们先了解一下常见的 NAT 类型。以下内容摘抄、修改自互联网：&lt;/p&gt;
&lt;h3 id=&#34;完全圆锥形-natfull-cone-nat&#34;&gt;完全圆锥形 NAT/Full Cone NAT
&lt;/h3&gt;&lt;p&gt;完全圆锥型 NAT 将一个来自内部 IP 地址和端口的所有请求，始终映射到相同的公网 IP 地址和端口；同时，任意外部主机向映射的公网 IP 地址和端口发送报文，都可以实现和内网主机进行通信，就像一个向外开口的圆锥形一样，故得名。&lt;/p&gt;
&lt;p&gt;这种模式很宽松，限制小，只要内网主机的 IP 地址和端口与公网 IP 地址和端口建立映射关系，所有互联网上的主机都可以访问该 NAT 之后的内网主机。&lt;/p&gt;
&lt;h3 id=&#34;地址限制式圆锥形-nataddress-restricted-cone-nat&#34;&gt;地址限制式圆锥形 NAT/Address Restricted Cone NAT
&lt;/h3&gt;&lt;p&gt;地址限制式圆锥形 NAT 同样将一个来自内部 IP 地址和端口的所有请求，始终映射到相同的公网 IP 地址和端口；与完全圆锥型 NAT 不同的是，当内网主机向某公网主机发送过报文后，只有该公网主机才能向内网主机发送报文，故得名。&lt;/p&gt;
&lt;p&gt;相比完全圆锥形 NAT，地址限制式圆锥形 NAT 增加了地址限制，也就是 IP 受限，而端口不受限。&lt;/p&gt;
&lt;h3 id=&#34;端口限制式圆锥形-natport-restricted-cone-nat&#34;&gt;端口限制式圆锥形 NAT/Port Restricted Cone NAT
&lt;/h3&gt;&lt;p&gt;端口限制式圆锥形 NAT 更加严格，在上述条件下，只有该公网主机该端口才能向内网主机发送报文，故得名。&lt;/p&gt;
&lt;p&gt;相比地址限制式圆锥形 NAT，端口限制式圆锥形 NAT 又增加了端口限制，也就是说 IP、端口都受限。&lt;/p&gt;
&lt;h3 id=&#34;对称式-natsymmetric-nat&#34;&gt;对称式 NAT/Symmetric NAT
&lt;/h3&gt;&lt;p&gt;对称式 NAT 将内网 IP 和端口到相同目的地址和端口的所有请求，都映射到同一个公网地址和端口；同一个内网主机，用相同的内网 IP 和端口向另外一个目的地址发送报文，则会用不同的映射（比如映射到不同的端口）。&lt;/p&gt;
&lt;p&gt;和端口限制式 NAT 不同的是，端口限制式 NAT 是所有请求映射到相同的公网 IP 地址和端口，而对称式 NAT 是为不同的请求建立不同的映射。它具有端口受限锥型的受限特性，内部地址每一次请求一个特定的外部地址，都可能会绑定到一个新的端口号。也就是请求不同的外部地址映射的端口号是可能不同的。&lt;/p&gt;
&lt;p&gt;了解了四种 NAT 类型，我们不难发现，对于 BT 这种使用模式，只有完全圆锥形 NAT/Full Cone NAT 可以尝试穿越。不同 Peer 客户端的 IP 不同，如果限制 IP 地址，Peer 就无法进行连接。&lt;/p&gt;
&lt;h2 id=&#34;nat-tcp-打洞&#34;&gt;NAT TCP 打洞
&lt;/h2&gt;&lt;p&gt;我们已经知道，在完全圆锥形 NAT 下，当映射关系建立后，任意外部主机向映射的公网 IP 地址和端口发送报文，都可以实现和内网主机进行通信。因此，只要内网主机通过某个端口向外发出请求，NAT 映射关系就会建立。&lt;/p&gt;
&lt;p&gt;不过，NAT 映射关系建立后，还面临着如何长时间保持的问题。我们可以利用 &lt;a class=&#34;link&#34; href=&#34;https://github.com/MikeWang000000/Natter&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Natter&lt;/a&gt; 或 &lt;a class=&#34;link&#34; href=&#34;https://github.com/heiher/natmap&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;NATMap&lt;/a&gt; 来实现对 NAT 映射关系的保持。具体原理如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;由本地端口 A 向外发起 TCP 长连接，以维持 NAT 端口映射关系。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;通过 STUN 服务器，获取对应的公网 IP 和端口。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;利用端口重用特性，同时监听端口 A，对外提供服务。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;qbittorrent-场景下的应用方法&#34;&gt;qBittorrent 场景下的应用方法
&lt;/h2&gt;&lt;p&gt;我们再来考虑 TCP 打洞在 BT 中的应用。公网 IPv4 地址不用担心，Tracker 可以从 TCP 报文中直接获得。关键是需要上报给 Tracker 正确的端口。&lt;/p&gt;
&lt;p&gt;对于 qBittorrent 而言，其上报的端口必然是其本地监听端口。如果要实现灵活地修改上报端口，需要修改 qBittorrent 源码，不符合大多数 PT 站的要求。因此，需要采取比较迂回的策略。&lt;/p&gt;
&lt;p&gt;我们假设做种设备的内网 IP 为 &lt;code&gt;192.168.1.2&lt;/code&gt;，路由器内网 IP 为 &lt;code&gt;192.168.1.1&lt;/code&gt;。路由器通过拨号获取到私网 IP &lt;code&gt;10.0.0.2&lt;/code&gt;。运营商 NAT 设备的公网 IP 为 &lt;code&gt;1.1.1.1&lt;/code&gt;。其中，做种设备已被设置为 DMZ 主机，意味着监听 &lt;code&gt;192.168.1.2:xxxx&lt;/code&gt; 等价于监听 &lt;code&gt;10.0.0.2:xxxx&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;我们使用 NATMap，通过本地端口 &lt;code&gt;12345&lt;/code&gt; 向外发起 TCP 连接，从而获取一组 NAT 映射关系，并且 &lt;code&gt;12345&lt;/code&gt; 端口可以用于提供服务。假设 &lt;code&gt;1.1.1.1:34567&lt;/code&gt; 被映射到 &lt;code&gt;10.0.0.2:12345&lt;/code&gt;，进而通过 DMZ 主机设置来到 &lt;code&gt;192.168.1.2:12345&lt;/code&gt;。理想情况下，直接让 qBittorrent 上报 &lt;code&gt;34567&lt;/code&gt; 并监听 &lt;code&gt;12345&lt;/code&gt; 即可。然而，由于 qBittorrent 只能上报本地监听端口，我们只能让 qBittorrent 监听 &lt;code&gt;192.168.1.2:34567&lt;/code&gt;。因此，需要 iptables 规则将本地的 &lt;code&gt;12345&lt;/code&gt; 端口转发至 &lt;code&gt;34567&lt;/code&gt; 端口。&lt;/p&gt;
&lt;p&gt;我们以 NATMap 为例。建立 NAT 映射关系或映射关系改变时，NATMap 可以触发脚本执行自定义操作。传入参数为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$1: Public address (IPv4/IPv6)&lt;/li&gt;
&lt;li&gt;$2: Public port&lt;/li&gt;
&lt;li&gt;$3: IP4P&lt;/li&gt;
&lt;li&gt;$4: Bind port (private port)&lt;/li&gt;
&lt;li&gt;$5: Protocol (TCP/UDP)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于 BT 的应用场景，我们只需要关注参数 2 公网端口和参数 4 内网端口。我们的脚本需要将 qBittorrent 的监听端口设置为参数 2 公网端口，然后用 iptables 将本地的参数 4 内网端口转发至本地的参数 2 公网端口。具体实现如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#!/bin/sh
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Natter/NATMap&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;private_port&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$4&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Natter: $3; NATMap: $4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;public_port&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$2&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Natter: $5; NATMap: $2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# qBittorrent.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;qb_web_host&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;127.0.0.1&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;qb_web_port&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;8080&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;qb_username&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;admin&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;qb_password&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;adminadmin&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Update qBittorrent listen port to &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$public_port&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;...&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Update qBittorrent listen port.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;qb_cookie&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;curl -s -i --header &lt;span class=&#34;s2&#34;&gt;&amp;#34;Referer: http://&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$qb_web_host&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$qb_web_port&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; --data &lt;span class=&#34;s2&#34;&gt;&amp;#34;username=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$qb_username&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;amp;password=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$qb_password&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; http://&lt;span class=&#34;nv&#34;&gt;$qb_web_host&lt;/span&gt;:&lt;span class=&#34;nv&#34;&gt;$qb_web_port&lt;/span&gt;/api/v2/auth/login &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep -i set-cookie &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; cut -c13-48&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;curl -X POST -b &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$qb_cookie&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; -d &lt;span class=&#34;s1&#34;&gt;&amp;#39;json={&amp;#34;listen_port&amp;#34;:&amp;#34;&amp;#39;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$public_port&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#34;}&amp;#39;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;http://&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$qb_web_host&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$qb_web_port&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/api/v2/app/setPreferences&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Update iptables...&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Use iptables to forward traffic.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;LINE_NUMBER&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;iptables -t nat -nvL --line-number &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep &lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;private_port&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; head -n &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; awk &lt;span class=&#34;s1&#34;&gt;&amp;#39;{print $1}&amp;#39;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;LINE_NUMBER&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; !&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    iptables -t nat -D PREROUTING &lt;span class=&#34;nv&#34;&gt;$LINE_NUMBER&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;iptables -t nat -I PREROUTING -p tcp --dport &lt;span class=&#34;nv&#34;&gt;$private_port&lt;/span&gt; -j DNAT --to-destination &lt;span class=&#34;nv&#34;&gt;$qb_web_host&lt;/span&gt;:&lt;span class=&#34;nv&#34;&gt;$public_port&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Done.&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;详细使用说明和脚本下载请前往我的 Github 仓库 &lt;a class=&#34;link&#34; href=&#34;https://github.com/Mythologyli/qBittorrent-NAT-TCP-Hole-Punching/blob/master/README.zh.md&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;qBittorrent NAT TCP Hole Punching&lt;/a&gt;。欢迎 Star。&lt;/p&gt;
&lt;p&gt;如果运行 NATMap 的设备与运行 qBittorrent 的设备不同，则需要修改脚本中 iptables 转发的部分和 qBittorrent API 中的 &lt;code&gt;localhost&lt;/code&gt;。&lt;/p&gt;
&lt;h2 id=&#34;参考内容&#34;&gt;参考内容
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/MikeWang000000/Natter&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Natter&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/heiher/natmap&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;NATMap&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        
    </channel>
</rss>
