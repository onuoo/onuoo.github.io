<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Windows on Myth&#39;s Blog | Myth 的小站</title>
        <link>http://localhost:1313/tags/windows/</link>
        <description>Recent content in Windows on Myth&#39;s Blog | Myth 的小站</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <lastBuildDate>Tue, 17 Oct 2023 00:00:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/tags/windows/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>深入探究 Windows 系统代理设置</title>
        <link>http://localhost:1313/p/windows-proxy/</link>
        <pubDate>Tue, 17 Oct 2023 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/p/windows-proxy/</guid>
        <description>&lt;img src="http://localhost:1313/p/windows-proxy/10.png" alt="Featured image of post 深入探究 Windows 系统代理设置" /&gt;&lt;p&gt;想必大家都经常用到 Windows 系统代理设置——即使没有亲自修改，多半也由软件代劳了。毕竟科学上网客户端干的事情通常都是：开启一个 HTTP 代理服务端，然后配置系统代理去设置去使用它。&lt;/p&gt;
&lt;p&gt;但是，某些情况下，Windows 系统代理却会出现一些玄学问题。比如，使用 ZJU 官方的有线校网客户端，或是自己创建名称带有中文的 L2TP VPN 时，系统代理设置好像无效了——浏览器说什么也不肯通过代理访问互联网。只好借助 SwitchyOmega 这样的插件，但总觉得不爽。又或者，在使用 L2TP VPN 环境下使用 Clash Verge，也会出现系统代理无效的问题。&lt;/p&gt;
&lt;p&gt;这篇文章通过试验，探究了 Windows 系统代理的一些细节，试图为以上问题找到答案。&lt;/p&gt;
&lt;h2 id=&#34;最基本的情况无拨号连接&#34;&gt;最基本的情况——无拨号连接
&lt;/h2&gt;&lt;p&gt;首先，我们来看看最基本的情况：没有任何拨号连接，即通过路由器直接上网。&lt;/p&gt;
&lt;p&gt;我们使用 Clash for Windows，在 7890 端口上开启 HTTP 代理服务器。之后，不用 Clash for Windows 内置的功能，而是在设置 - 网络和 Internet - 代理中进行手动配置。&lt;/p&gt;
&lt;div style=&#34;text-align:center&#34;&gt;&lt;img src=&#34;1.png&#34; width=400/&gt;&lt;/div&gt;
&lt;p&gt;开启“使用代理服务器”后，我们可以发现 Clash log 中已经有浏览器的流量，这说明浏览器正在使用代理上网。&lt;/p&gt;
&lt;p&gt;为了知其所以然，让我们看看此时在注册表里发生了什么：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/windows-proxy/2.png&#34;
	width=&#34;2273&#34;
	height=&#34;965&#34;
	srcset=&#34;http://localhost:1313/p/windows-proxy/2_hu_719bd3d73d9fdd8d.png 480w, http://localhost:1313/p/windows-proxy/2_hu_fe11783615266ab4.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;235&#34;
		data-flex-basis=&#34;565px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;可以发现，&lt;code&gt;HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Internet Settings&lt;/code&gt; 中的 &lt;code&gt;ProxyEnable&lt;/code&gt; 被设置为 &lt;code&gt;1&lt;/code&gt;，&lt;code&gt;ProxyServer&lt;/code&gt; 被设置为 &lt;code&gt;127.0.0.1:7890&lt;/code&gt;，&lt;code&gt;ProxyOverride&lt;/code&gt; 被设置为 &lt;code&gt;localhost; &amp;lt;local&amp;gt;&lt;/code&gt;。这三个值分别对应“使用代理服务器”、“代理 IP 地址 + 端口”、“不使用代理服务器的地址”这三个选项。&lt;/p&gt;
&lt;h2 id=&#34;就这么简单吗还有设置&#34;&gt;就这么简单吗？——还有设置！
&lt;/h2&gt;&lt;p&gt;要是就这么简单就好了。实际上，仔细观察注册表，就会发现还有设置！&lt;/p&gt;
&lt;p&gt;进入 &lt;code&gt;HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Internet Settings\Connections&lt;/code&gt;，查看 &lt;code&gt;DefaultConnectionSettings&lt;/code&gt; 键的值，这是一个二进制：&lt;/p&gt;
&lt;div style=&#34;text-align:center&#34;&gt;&lt;img src=&#34;3.png&#34; width=400/&gt;&lt;/div&gt;
&lt;p&gt;诶！怎么又来一份代理设置！而且是一模一样的！&lt;/p&gt;
&lt;p&gt;我们回到设置 - 网络和 Internet - 代理中，将端口从 7890 改成 7891，然后再看看注册表：&lt;code&gt;ProxyServer&lt;/code&gt; 变了，&lt;code&gt;DefaultConnectionSettings&lt;/code&gt; 也变了。此时浏览器也无法正常上网。看来在设置中的修改会同时影响这两个。&lt;/p&gt;
&lt;p&gt;那么，浏览器上网的代理到底由哪个决定呢？我们直接在注册表修改 &lt;code&gt;DefaultConnectionSettings&lt;/code&gt;，将端口改回 7890，此时浏览器又可以正常上网了。看来 &lt;code&gt;DefaultConnectionSettings&lt;/code&gt; 决定浏览器上网的代理。&lt;/p&gt;
&lt;p&gt;实际上，&lt;code&gt;DefaultConnectionSettings&lt;/code&gt; 对应着 Internet 属性 - 连接 - 局域网设置，这是从古老的 IE 那里流传下来的设置界面——即使现在 IE 已经没了但这个界面还在控制面板里。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/windows-proxy/4.png&#34;
	width=&#34;1902&#34;
	height=&#34;1318&#34;
	srcset=&#34;http://localhost:1313/p/windows-proxy/4_hu_5b09352d026f2d0f.png 480w, http://localhost:1313/p/windows-proxy/4_hu_4cc74b694278212e.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;144&#34;
		data-flex-basis=&#34;346px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;另外，还有一个有趣的现象——这两个键会互相影响。例如，初始情况下 &lt;code&gt;ProxyServer&lt;/code&gt; 和 &lt;code&gt;DefaultConnectionSettings&lt;/code&gt; 中的端口均为 7890，此时可以正常上网。此时修改 &lt;code&gt;ProxyServer&lt;/code&gt; 中的端口为 7899，就会发现不能上网了——奇怪，不是应该由 &lt;code&gt;DefaultConnectionSettings&lt;/code&gt; 决定吗？但此时再去检查 &lt;code&gt;DefaultConnectionSettings&lt;/code&gt;，发现也跟着变了。再把 &lt;code&gt;DefaultConnectionSettings&lt;/code&gt; 改回 7890，立马又可以上网了，不过 &lt;code&gt;ProxyServer&lt;/code&gt; 没有变回 7890。但打开设置后，&lt;code&gt;ProxyServer&lt;/code&gt; 也变回 7890 了。&lt;/p&gt;
&lt;h2 id=&#34;拨号连接又来一份设置&#34;&gt;拨号连接——又来一份设置！
&lt;/h2&gt;&lt;p&gt;进过一番讨论，无拨号的情况研究的差不多了——别急，还有拨号连接呢！&lt;/p&gt;
&lt;p&gt;我们先复原所有代理设置，创建一个名为 ZJUVPN 的 L2TP VPN 并连接，然后重复一开始的过程：在设置 - 网络和 Internet - 代理中进行手动配置。此时的结果就和我们预想的大不相同了：没有用！还是在直连。查看注册表，更觉得古怪：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/windows-proxy/5.png&#34;
	width=&#34;2278&#34;
	height=&#34;862&#34;
	srcset=&#34;http://localhost:1313/p/windows-proxy/5_hu_93cbc1d5ae723883.png 480w, http://localhost:1313/p/windows-proxy/5_hu_9d873d651f216d6a.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;264&#34;
		data-flex-basis=&#34;634px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;首先，&lt;code&gt;ProxyServer&lt;/code&gt; 和 &lt;code&gt;ProxyOverride&lt;/code&gt; 消失了，只有 &lt;code&gt;ProxyEnable&lt;/code&gt; 还在，但是值是 0——这和说好的不一样啊，设置里代理不是启用状态吗？再看 &lt;code&gt;DefaultConnectionSettings&lt;/code&gt;，这个好像比较正常（此时在设置里更改还是可以改变 DefaultConnectionSettings 的值），但是不生效。不过，仔细看看 &lt;code&gt;HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Internet Settings\Connections&lt;/code&gt;，原因显而易见了：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/windows-proxy/6.png&#34;
	width=&#34;2655&#34;
	height=&#34;1147&#34;
	srcset=&#34;http://localhost:1313/p/windows-proxy/6_hu_64b36420868b51b3.png 480w, http://localhost:1313/p/windows-proxy/6_hu_67909213b498d80b.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;231&#34;
		data-flex-basis=&#34;555px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Connections 中多出了一个名为 &lt;code&gt;ZJUVPN&lt;/code&gt; 的键，并且看起来是没有设置的。打开 Internet 属性 - 连接，也可以看到多了一个 ZJUVPN 配置项。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/windows-proxy/7.png&#34;
	width=&#34;1841&#34;
	height=&#34;1295&#34;
	srcset=&#34;http://localhost:1313/p/windows-proxy/7_hu_7b7153b43b8afc9a.png 480w, http://localhost:1313/p/windows-proxy/7_hu_79e524efe1d2e0bf.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;142&#34;
		data-flex-basis=&#34;341px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;看来，Windows 的 VPN 拨号连接的设置是独立的，而设置 - 网络和 Internet - 代理中的设置只对无拨号连接生效。要更改 VPN 拨号连接的代理设置，需要在 Internet 属性 - 连接中进行更改。当然，Windows 也做了相应的现代界面（经典的设置+控制面板）：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/windows-proxy/8.png&#34;
	width=&#34;2152&#34;
	height=&#34;1556&#34;
	srcset=&#34;http://localhost:1313/p/windows-proxy/8_hu_10ad17e555b818d6.png 480w, http://localhost:1313/p/windows-proxy/8_hu_6f841da068574d1c.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;138&#34;
		data-flex-basis=&#34;331px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;单独修改代理设置后，浏览器可以正常使用代理。可以看到，这一设置较为隐蔽。一些科学上网客户端也忽略了这一点，导致无法在使用 VPN 时正确设置系统代理。详见&lt;a class=&#34;link&#34; href=&#34;https://github.com/zzzgydi/clash-verge/issues/833&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;此链接&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&#34;中文名称锟斤拷的噩梦&#34;&gt;中文名称——锟斤拷的噩梦
&lt;/h2&gt;&lt;p&gt;众所周知，使用 ZJU 有线校网客户端会导致梯子无法正常工作。我们来看看这究竟是为什么。（友情提示：有线校网客户端容易炸注册表，强烈建议在虚拟机内试验）&lt;/p&gt;
&lt;p&gt;成功连接客户端后，在终端输入 &lt;code&gt;ipconfig&lt;/code&gt; 命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;C:\Users\Myth&amp;gt;ipconfig
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Windows IP 配置
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;以太网适配器 Ethernet0:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   连接特定的 DNS 后缀 . . . . . . . : localdomain
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   本地链接 IPv6 地址. . . . . . . . : fe80::8f6a:5577:f304:1fea%6
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   IPv4 地址 . . . . . . . . . . . . : 192.168.163.132
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   子网掩码  . . . . . . . . . . . . : 255.255.255.0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   默认网关. . . . . . . . . . . . . : 192.168.163.2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;PPP 适配器 SRun3K专用宽带拨号连接:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   连接特定的 DNS 后缀 . . . . . . . :
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   IPv4 地址 . . . . . . . . . . . . : 222.205.2.241
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   子网掩码  . . . . . . . . . . . . : 255.255.255.255
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   默认网关. . . . . . . . . . . . . : 0.0.0.0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;以太网适配器 蓝牙网络连接:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   媒体状态  . . . . . . . . . . . . : 媒体已断开连接
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   连接特定的 DNS 后缀 . . . . . . . :
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;有线客户端创建了一个名为“SRun3K专用宽带拨号连接”的 PPP 适配器，通过这个适配器访问互联网。此时手动配置设置 - 网络和 Internet - 代理。根据上一节的经验，我们知道 Internet 属性 - 连接中会出现一个新的配置&amp;hellip;嗯？&lt;/p&gt;
&lt;div style=&#34;text-align:center&#34;&gt;&lt;img src=&#34;9.png&#34; width=400/&gt;&lt;/div&gt;
&lt;p&gt;怎么空空如也？赶快看看注册表：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/windows-proxy/10.png&#34;
	width=&#34;1884&#34;
	height=&#34;1124&#34;
	srcset=&#34;http://localhost:1313/p/windows-proxy/10_hu_e16354ca96d656d4.png 480w, http://localhost:1313/p/windows-proxy/10_hu_e0ee2ee3196f71cc.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;167&#34;
		data-flex-basis=&#34;402px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;好家伙，乱码了！看来又是 GBK 和 Unicode 混用搞得鬼！有没有可能手动修改这个乱码键的值来设置代理呢？试了试发现不行。不过，手动新建一个名为“SRun3K专用宽带拨号连接”的键，然后把 &lt;code&gt;DefaultConnectionSettings&lt;/code&gt; 的值偷过来，发现可以正常使用代理了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/windows-proxy/11.png&#34;
	width=&#34;2000&#34;
	height=&#34;1036&#34;
	srcset=&#34;http://localhost:1313/p/windows-proxy/11_hu_c238829863db131b.png 480w, http://localhost:1313/p/windows-proxy/11_hu_5e036b09520b8d8f.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;193&#34;
		data-flex-basis=&#34;463px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;自建中文名称的 L2TP VPN 也同理，同样会因为中文乱码造成无法设置系统代理的问题。&lt;/p&gt;
&lt;h2 id=&#34;默认-vpn-名称含中文巨硬的坑人大法&#34;&gt;默认 VPN 名称含中文——巨硬的坑人大法
&lt;/h2&gt;&lt;p&gt;写到这里有读者可能会好奇——为什么那么多人创建名称含中文的 L2TP VPN 呢？呵呵，这就要问问微软了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/windows-proxy/12.png&#34;
	width=&#34;1228&#34;
	height=&#34;920&#34;
	srcset=&#34;http://localhost:1313/p/windows-proxy/12_hu_c5f6ab5321aebc3a.png 480w, http://localhost:1313/p/windows-proxy/12_hu_b5200e7a853e7cbb.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;默认名称？？！！&lt;/p&gt;
&lt;h2 id=&#34;总结复杂而混乱的代理设置体系&#34;&gt;总结——复杂而混乱的代理设置体系
&lt;/h2&gt;&lt;p&gt;Windows 复杂而混乱的代理设置体系给我们带来了许多困难。用户和开发者很容易忽视拨号连接代理设置的独立性，造成种种问题，更何况还有中文乱码这个大坑。&lt;/p&gt;
&lt;p&gt;在这方面的使用、开发中，必须要注意：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;程序在设置系统代理时，不可遗漏 &lt;code&gt;HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Internet Settings\Connections&lt;/code&gt; 中的键值。当然二进制的形式给开发者带来了更多困难。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用 VPN 时，要注意不能创建名称含有中文的网络适配器。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>禁用 Windows 11 平板模式</title>
        <link>http://localhost:1313/p/disable-tablet-mode-in-windows-11/</link>
        <pubDate>Sat, 19 Nov 2022 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/p/disable-tablet-mode-in-windows-11/</guid>
        <description>&lt;img src="http://localhost:1313/p/disable-tablet-mode-in-windows-11/1.png" alt="Featured image of post 禁用 Windows 11 平板模式" /&gt;&lt;h2 id=&#34;故障&#34;&gt;故障
&lt;/h2&gt;&lt;p&gt;微软至少在 Windows 10 就引入了平板模式。平板模式为触摸屏设备（如笔者的 Surface）进行了优化，提升了使用这些设备的体验。例如，UI 间距变大、资源管理器出现复选框等等。当然，在使用键鼠时，这些特性只会帮倒忙。&lt;/p&gt;
&lt;p&gt;在 Windows 10，微软至少提供了一个开关在平板模式和普通模式之间切换。但在 Windows 11 中，聪明的微软让平板模式变得更强制了。例如，对于 Surface，只要没有接入 Surface 键盘，都会自动进入平板模式，且无法退出。更神奇的是，即使接入外置键盘也不行——微软依旧认为你应该使用平板模式。&lt;/p&gt;
&lt;div style=&#34;text-align:center&#34;&gt;&lt;img src=&#34;2.png&#34; width=600/&gt;&lt;/div&gt;
&lt;p&gt;平板模式在 Windows 11 中带来了不可关闭的资源管理器复选框，非常烦人。Chrome 等应用也变得肥大。&lt;/p&gt;
&lt;p&gt;在 Microsoft Community 和 Reddit 上已经有不少人抱怨此事，反馈中心也有相关的反馈。但微软似乎不是很在意。并且，找了半天也没有能成功退出平板模式的方法。于是我只好自己研究一下。&lt;/p&gt;
&lt;h2 id=&#34;解决方案&#34;&gt;解决方案
&lt;/h2&gt;&lt;p&gt;解决方案倒是异常简单，只需要在注册表中改变一个键值。很奇怪，Microsoft Community 和 Reddit 上居然没人说。&lt;/p&gt;
&lt;p&gt;我先查找了微软关于平板模式的文档：&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://learn.microsoft.com/en-us/windows-hardware/design/device-experiences/continuum&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://learn.microsoft.com/en-us/windows-hardware/design/device-experiences/continuum&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这个文档大概是面向驱动程序开发人员的，其中提到：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;There are two main ways to enter/exit “tablet mode”:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Manually - The user can enter/exit “tablet mode” manually by pressing the “tablet mode” button located in Action Center.&lt;/li&gt;
&lt;li&gt;Hardware action triggered - The OS can ask the user if they would like to enter/exit “tablet mode” if the hardware has indicated the form factor has changed through ConvertibleSlateMode.&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;看来，通过 &lt;code&gt;ConvertibleSlateMode&lt;/code&gt; 可以控制平板模式。同时，微软在 FAQ 中写道：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Will the auto prompt to enter/exit “tablet mode” take place upon the insertion of an external USB keyboard?&lt;/p&gt;
&lt;p&gt;No, the auto prompt will be triggered through the toggling of the ConvertibleSlateMode value, not the presence of any kind of keyboard.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;这下破案了，只要驱动程序不去更改 &lt;code&gt;ConvertibleSlateMode&lt;/code&gt; 的值，就不会改变当前的模式。USB 键盘的驱动当然不会去改这个值了，难怪插入 USB 键盘也没用。&lt;/p&gt;
&lt;p&gt;现在，解决方案就很明确了：将 &lt;code&gt;\HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\PriorityControl&lt;/code&gt; 中的 &lt;code&gt;ConvertibleSlateMode&lt;/code&gt; 的值改为 &lt;code&gt;1&lt;/code&gt; 即可。&lt;/p&gt;
&lt;p&gt;我编写了一个注册表脚本去修改这个值：&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://gist.github.com/Mythologyli/78e0b2cba3541b3f7795236e4dabb999&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://gist.github.com/Mythologyli/78e0b2cba3541b3f7795236e4dabb999&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Windows Registry Editor Version 5.00

[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\PriorityControl]
&amp;quot;ConvertibleSlateMode&amp;quot;=dword:00000001
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;运行一下这个脚本，你的电脑就退出平板模式啦。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>基于软件实现一套键鼠操作多台电脑 —— Barrier 使用介绍</title>
        <link>http://localhost:1313/p/barrier/</link>
        <pubDate>Tue, 25 May 2021 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/p/barrier/</guid>
        <description>&lt;h2 id=&#34;前言&#34;&gt;前言
&lt;/h2&gt;&lt;p&gt;笔者有一台拯救者和一台 Surface。平时在宿舍时，当然更喜欢用游戏本的键鼠操作。不过若要使用两台电脑，就得不断移动手去分别操作两台电脑的键鼠，非常麻烦。&lt;/p&gt;
&lt;p&gt;用过双屏的同学们一定知道，只要将光标移动出屏幕边缘就可以让光标移动到另一个屏幕上去。但现在的情景是两台电脑，而非一台电脑两个显示器。Windows 的原生功能显然无法解决这个问题。下面有请 Barrier 登场。&lt;/p&gt;
&lt;h2 id=&#34;what-is-barrier&#34;&gt;What is Barrier?
&lt;/h2&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/debauchee/barrier&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;项目地址&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Barrier 是一个开源软件，是 symless 公司开源项目
synergy-core 的一个分支。使用 Barrier，你可以通过移动光标的方式，用一台电脑（server）的键鼠操作同一局域网下的多台电脑（client），甚至可以共享这些电脑的剪贴板。原先的软件 Synergy 可以做一样的事，但 symless 将这套系统商业化了，只开源了核心 synergy-core。Barrier 可以理解为基于 synergy-core 的开源软件，好处是免费，不过少了一些不那么重要的功能（如跨电脑复制文件）。&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage
&lt;/h2&gt;&lt;p&gt;接下了介绍如何在浙江大学校园网络环境下在两台电脑上配置 Barrier，实现键鼠的共享。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;首先&lt;a class=&#34;link&#34; href=&#34;https://github.com/debauchee/barrier/releases&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;下载 Barrier&lt;/a&gt;。请分别为 Server（你要使用的键鼠所在的电脑）和 client（被控电脑）下载合适版本的软件。Windows: .exe | Mac: .dmg&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;分别在 server 机和 client 机上安装软件。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;首先配置 server 一侧。打开 barrier，会出现这样一个界面：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/barrier/1.png&#34;
	width=&#34;602&#34;
	height=&#34;376&#34;
	srcset=&#34;http://localhost:1313/p/barrier/1_hu_7f1bced021728699.png 480w, http://localhost:1313/p/barrier/1_hu_3dbefcfa30602b78.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;160&#34;
		data-flex-basis=&#34;384px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;我们勾选 server，来将程序配置为 server 模式。注意到上面打码的地方有一排 IP 地址，找到 10 开头的那个，那是你在校园局域网下的 IP。（用路由器的同学可以用路由器分配的 IP）&lt;/p&gt;
&lt;p&gt;点击应用 - 开始，使程序运行，等待连接。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;再配置 client 一侧。打开 barrier，这次我们勾选 client，同时，在服务端 IP 处填写刚刚记录的 10 开头的 IP。点击应用 - 开始。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;我们回到 server 一侧。点击设置服务端，可以看到这样的界面：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/barrier/2.png&#34;
	width=&#34;797&#34;
	height=&#34;566&#34;
	srcset=&#34;http://localhost:1313/p/barrier/2_hu_77a4b4c040c571e6.png 480w, http://localhost:1313/p/barrier/2_hu_532cded4f9984942.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;140&#34;
		data-flex-basis=&#34;337px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;你可能只能看到一个屏幕。从右上角拖一个电脑到网格中，双击配置屏幕名为 client 机的屏幕名（client 端有显示）。如果不小心弄多了，拖到左上角的垃圾筐即可。&lt;/p&gt;
&lt;p&gt;如图，在这里，Laptop 是 server 机，Surface 是 client 机。可以拖动 client 机，改变 client 机屏幕相对 server 机屏幕的位置。在本图中，将光标向左移动可以使光标到达 client 机屏幕。&lt;/p&gt;
&lt;p&gt;点击 OK - 应用 - 开始。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;接下来就可以使用了。光标在哪个屏幕，键盘也就会作用到哪个屏幕，十分好用。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;tips&#34;&gt;Tips
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;剪贴板中的文字和图片也可以共享。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果觉得 IP 地址不断变化很麻烦，可以按照在 server 机上配置 DDNS，使用域名代替 IP 地址。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>在 Windows 上实现阿里云 DNS 动态解析</title>
        <link>http://localhost:1313/p/aliyun-ddns/</link>
        <pubDate>Sun, 13 Sep 2020 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/p/aliyun-ddns/</guid>
        <description>&lt;p&gt;由于学校校园网 Wi-Fi 最近支持了 IPv6/IPv4 双栈连接，笔记本终于可以离开网线接入 IPv6 网络了。因为我有在阿里云购买的域名，所以做了 AAAA 解析记录，可以愉快地用域名远程连接笔记本，再也不需要通过服务器中转 RDP。可是学校分配的 IPv6 时不时会发生改变，而一遍遍在阿里云控制台更改太麻烦，于是想到能不能在 Windows 上实现阿里云 DNS 动态解析服务。&lt;/p&gt;
&lt;p&gt;在一番搜索后，在 Github 上找到了 &lt;a class=&#34;link&#34; href=&#34;https://github.com/xuchao1213/AliyunDdnsCSharp&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;AliyunDdnsCSharp&lt;/a&gt; 这个项目，完美地解决了我的问题。感谢项目作者 &lt;a class=&#34;link&#34; href=&#34;https://github.com/xuchao1213&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;xuchao1213&lt;/a&gt;！&lt;/p&gt;
&lt;p&gt;下面是个人实践的安装方法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;点击链接，在阿里云申请 AccessKey ID 和 AccessKey Secret。通过 AccessKey 可以调用阿里云域名解析相关的 API，从而实现对域名解析记录的更改。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 Github 下载该程序。将压缩包 AliyunDdnsCSharp.zip 在任意目录解压（目录以后不可变动）。执行 Install.bat 安装服务。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 conf 目录下放置配置文件。支持多个配置文件，每个文件一条记录。&lt;/p&gt;
&lt;p&gt;例如，以下配置表示：刷新间隔10 min；解析域名为 test.example.com；记录类型为 AAAA (IPv6)；线路为默认线路；TTL 为600；获取 IPv6 地址的方式为 ipconfig（默认）。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;Interval&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;10&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;AccessKeyId&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;xxxxxx&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;AccessKeySecret&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;xxxxxx&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;DomainName&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;example.com&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;SubDomainName&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;Type&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;AAAA&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;Line&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;default&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;TTL&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;600&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;GetIpUrls&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;执行 Start.bat，DDNS服务应该可以正常运行。&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        
    </channel>
</rss>
